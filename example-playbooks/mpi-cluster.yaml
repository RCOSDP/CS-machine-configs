---

################################
# provison basic configuration on all nodes
#
- name: basic configurations
  hosts: default
  become: yes
  tasks:

    - name: setup hostname
      hostname:
        name: "{{ hostname }}"

    - name: deploy /etc/hosts
      template:
        src: templates/etc_hosts.j2
        dest: /etc/hosts
      vars:
        etc_host_group: default

    - name: make sure group mpiusers exists
      group:
        name: mpiusers
        state: present

    - name: add path for OpenMPI to system-wide bashrc
      blockinfile:
        path: /etc/bash.bashrc
        block: |
          MPIROOT=/usr/mpi/gcc/openmpi-4.0.4rc3
          PATH=$MPIROOT/bin:$PATH
          LD_LIBRARY_PATH=$MPIROOT/lib:$LD_LIBRARY_PATH
          MANPATH=$MPIROOT/share/man:$MANPATH
          export MPIROOT PATH LD_LIBRARY_PATH MANPATH


    - name: create ansible user
      user:
        name: ansible
        groups: adm,sudo
        home: /var/ansible
        create_home: yes

    - name: make ansible user be sudoable with nopass
      blockinfile:
        path: /etc/sudoers.d/ansible
        create: yes
        block: |
          ansible ALL=(ALL) NOPASSWD:ALL

    - name: make sure /var/ansible/.ssh exists
      file:
        path: /var/ansible/.ssh
        state: directory
        owner: ansible
        group: ansible


    # Following tasks are invoked on the 1st shot 
    # (HOME of mdxuser is not moved yet)
    #
    - name: check /home/mdxuser exists
      stat: path=/home/mdxuser
      register: home_mdxuser_stat
           
    - name: copy mdxuser authkey to ansible user if /home/mdxuser exists
      copy:
        src: /home/mdxuser/.ssh/authorized_keys
        dest: /var/ansible/.ssh/authorized_keys
        remote_src: yes
        owner: ansible
        group: ansible
        mode: "0600"
      when: home_mdxuser_stat.stat.exists

    #
    - name: check /home.local/mdxuser exists
      stat: path=/home.local/mdxuser
      register: home_local_mdxuser_stat

    - name: copy mdxuser authkey to ansible user if /home.local/mdxuser exists
      copy:
        src: /home.local/mdxuser/.ssh/authorized_keys
        dest: /var/ansible/.ssh/authorized_keys
        remote_src: yes
        owner: ansible
        group: ansible
        mode: "0600"
      when: home_local_mdxuser_stat.stat.exists



################################
# mv and change $HOME of mdxuser
# This play is invoked on only the 1st shot where /home/mdxuser exists
#
- name: move /home/mdxuser to /home.mdxuser
  hosts: default
  become: yes
  vars:
    ansible_user: ansible

  tasks:
    - name: make sure /home.local exists
      file:
        path: /home.local
        state: directory

    - name: check /home/mdxuser exists
      stat: 
        path: /home/mdxuser
      register: home_mdxuser_stat

    - name: move home dir of mdxuser
      command: mv /home/mdxuser /home.local/
      when: home_mdxuser_stat.stat.exists

    # XXX: should be gentle...
    - name: killall mdxuser processes before change homedir
      command: killall -KILL -u mdxuser
      when: home_mdxuser_stat.stat.exists

    - name: make sure mdxuser's homedir is /home.local/mdxuser
      user:
        name: mdxuser
        home: /home.local/mdxuser
      when: home_mdxuser_stat.stat.exists



################################
# cleanup user ansible because moving /home/mdxuser is done
#
- name: remove ansible user
  hosts: default
  become: yes

  tasks:

    # XXX: should be gentle...
    - name: killall processes of user ansible before remove it
      command: killall -KILL -u ansible

    - name: make sure user ansible does not exist
      user:
        name: ansible
        state: absent

    - name: make sure /var/ansible does not exist
      file:
        path: /var/ansible
        state: absent


################################
# Setup NFS server
#
- name: setup NFS server
  hosts: nfsserver
  become: yes
  vars:
    - bench: osu-micro-benchmarks-5.8
    - mpicc: /usr/mpi/gcc/openmpi-4.0.4rc3/bin/mpicc
    - mpicxx: /usr/mpi/gcc/openmpi-4.0.4rc3/bin/mpicxx

  tasks:
    - name: install nfs server
      apt:
        name: nfs-kernel-server
        state: present

    - name: export /home via NFS
      lineinfile:
        path: /etc/exports
        state: present
        regexp: "^/home "
        line: "/home {{ ethipv4prefix }}(rw)"

    - name: re-export all directories
      command: exportfs -ra


    # Download and build OSU Micro Benchmarks as an example
    - name: get OSU Micro-benchmarks
      get_url:
        url: "https://mvapich.cse.ohio-state.edu/download/mvapich/{{ bench }}.tgz"
        dest: /tmp

    - name: create /home/example
      file:
        path: /home/example
        state: directory
        group: mpiusers
        mode: "0775"

    - name: decompress OSU Micro-benchmarks
      unarchive:
        src: "/tmp/{{ bench }}.tgz"
        dest: "/home/example"
        remote_src: yes

    - name: configure OSU Micro-benchmarks
      command: "./configure CC={{ mpicc }} CXX={{ mpicxx }} chdir=/home/example/{{ bench }}"

    - name: make OSU Micro-benchmarks
      command: "make CC={{ mpicc }} CXX={{ mpicxx }} chdir=/home/example/{{ bench }}"


################################
# Setup NFS clients
#
- name: configure NFS clients
  hosts: nfsclients
  become: yes

  vars:
    nfs_target: "{{ hostvars[groups['nfsserver'][0]]['ethipv4'] }}"

  tasks:
    - name: install nfs client
      apt:
        name: nfs-common
        state: present

    - name: find files under /home/*
      find:
        paths: /home
        patterns: ".*"
      register: home_content

    - name: mv /home/* to /home.local/ if it is not NFS
      shell: mv {{ item.path }} /home.local/
      with_items: "{{ home_content.files }}"
      when: ansible_mounts | selectattr('mount', 'equalto', '/home') | list | length == 0


    - name: mount /home via NFS
      mount:
        src: "{{ nfs_target }}:/home"
        path: /home
        opts: rw,noatime
        boot: yes
        state: mounted
        fstype: nfs


