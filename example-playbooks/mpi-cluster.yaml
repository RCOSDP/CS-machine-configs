---

################################
# provison basic configuration on all nodes
#
- name: setup /etc/hosts
  hosts: default
  become: yes
  vars:
    - nfs_dir: /nfs

  tasks:
    - name: deploy /etc/hosts
      template:
        src: templates/etc_hosts.j2
        dest: /etc/hosts
      vars:
        etc_host_group: default

    - name: make sure group mpiusers exists
      group:
        name: mpiusers
        state: present

    - name: make sure /nfs exists
      file:
        path: "{{ nfs_dir }}"
        state: directory
        mode: "0775"
        owner: mdxuser
        group: mpiusers

    - name: add path for OpenMPI to system-wide bashrc
      blockinfile:
        path: /etc/bash.bashrc
        block: |
          MPIROOT=/usr/mpi/gcc/openmpi-4.0.4rc3
          PATH=$MPIROOT/bin:$PATH
          LD_LIBRARY_PATH=$MPIROOT/lib:$LD_LIBRARY_PATH
          MANPATH=$MPIROOT/share/man:$MANPATH
          export MPIROOT PATH LD_LIBRARY_PATH MANPATH



################################
# Setup manager
#
- name: configure manager host
  hosts: manager
  become: yes
  vars:
    - nfs_dir: /nfs
    - bench: osu-micro-benchmarks-5.8
    - mpicc: /usr/mpi/gcc/openmpi-4.0.4rc3/bin/mpicc
    - mpicxx: /usr/mpi/gcc/openmpi-4.0.4rc3/bin/mpicxx

  tasks:

    # Configure NFS Server
    - name: install nfs server
      apt:
        name: nfs-kernel-server
        state: present

    - name: export /nfs via NFS
      lineinfile:
        path: /etc/exports
        state: present
        regexp: "^{{ nfs_dir }} "
        line: "{{ nfs_dir }} {{ ethipv4prefix }}(rw)"

    - name: re-export all directories
      command: exportfs -ra


    # Download and build OCU Micro Benchmarks
    - name: get OSU Micro-benchmarks
      get_url:
        url: "https://mvapich.cse.ohio-state.edu/download/mvapich/{{ bench }}.tgz"
        dest: /tmp

    - name: decompress OSU Micro-benchmarks
      unarchive:
        src: "/tmp/{{ bench }}.tgz"
        dest: "{{ nfs_dir }}/"
        remote_src: yes

    - name: configure OSU Micro-benchmarks
      command: "./configure CC={{ mpicc }} CXX={{ mpicxx }} chdir=/nfs/{{ bench }}"

    - name: make OSU Micro-benchmarks
      command: "make CC={{ mpicc }} CXX={{ mpicxx }} chdir=/nfs/{{ bench }}"



################################
# Setup workers (mount NFS)
#
- name: configure worker hosts
  hosts: workers
  become: yes
  vars:
    nfs_dir: /nfs
    nfs_target: "{{ hostvars[inventory_hostname]['groups']['manager'][0] }}"

  tasks:
    - name: install nfs client
      apt:
        name: nfs-common
        state: present

    - name: mount the NFS volume on the manager host
      mount:
        src: "{{ nfs_target }}:{{ nfs_dir }}"
        path: "{{ nfs_dir }}"
        opts: rw,noatime
        boot: yes
        state: mounted
        fstype: nfs


################################
# Setup user accounts
#
- name: provision user accounts
  hosts: default
  become: yes
  vars:
    nfs_dir: /nfs

    users:
      - name: prjuser1
        state: present
        password: $6$ultraslt$b47IR6oT4WndhJ4AiP9hP1s7R8COiJR9G1GY5xM39jSwB4FGiYNSv6Cfb364ECeAhqUiDQLConHh.f1ocFVfZ1
        groups: mpiusers
        keys:
          - "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIHUezbSsj6sYL8CWB8oBz38+fEdBo/DfjpYYwlNf6QA9"
          - "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIEhNyUV0cdY7HORlQzjvsFTHhyPtdAkHJ7GZepPgtmZC"

      - name: prjuser2
        state: present
        password: $6$ultraslt$b47IR6oT4WndhJ4AiP9hP1s7R8COiJR9G1GY5xM39jSwB4FGiYNSv6Cfb364ECeAhqUiDQLConHh.f1ocFVfZ1
        groups: mpiusers
        keys:
          - "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIJrTe0xnvijAcll+BRNWeqrQ9lDp/9pU+2QJcbZhzDwS"


  tasks:
    - name: create or delete users
      user:
        name: "{{ item.name }}"
        state: "{{ item.state }}"
        password: "{{ item.password }}"
        groups: "{{ item.groups }}"
        shell: /bin/bash
      loop: "{{ users }}"

    - name: put ssh auth keys for users
      authorized_key:
        state: present
        user: "{{ item.0.name }}"
        key: "{{ item.1 }}"
      loop: "{{ users | subelements('keys') }}"
      when: item.0.state == "present"

    - name: create user directories on NFS dir
      file:
        path: "{{ nfs_dir }}/{{ item.name }}"
        state: directory
        mode: "0755"
        owner: "{{ item.name }}"
        group: "{{ item.name }}"
      loop: "{{ users }}" 
      when: item.state == "present"

    - name: create symbolic link for /nfs/USER_DIR
      file:
        src: "{{ nfs_dir }}/{{ item.name }}"
        dest: "/home/{{ item.name }}/nfs"
        owner: "{{ item.name }}"
        group: "{{ item.name }}"
        state: link
      loop: "{{ users }}"
      when: item.state == "present"
