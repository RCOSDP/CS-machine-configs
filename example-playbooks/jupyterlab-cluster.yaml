---

################################
# Deploy /etc/hosts
#
- name: setup /etc/hosts
  hosts: default
  become: yes

  tasks:
    - name: deploy /etc/hosts
      template:
        src: templates/etc_hosts.j2
        dest: /etc/hosts
      vars:
        etc_host_group: default


################################
# Deploy jupyter lab
#
- name: Deploy jupyterlab on all nodes
  hosts: default
  become: yes

  tasks:
    - name: setup hostname
      hostname:
        name: "{{ hostname }}"

    - name: install required packages
      apt:
        state: present
        name:
          - python3-venv
          - nfs-common

    - name: create venv for jupyterlab
      pip: 
        name:
          - setuptools
          - pip
        state: latest
        virtualenv: "/home/mdxuser/.python-venv"
        virtualenv_command: '/usr/bin/python3 -m venv'
  
    - name: install jupyterlab
      pip:
        name:
          - jupyterlab
        virtualenv: "/home/mdxuser/.python-venv"
    
    - name: recursively change ownership of the python-venv directory
      file:
        path: /home/mdxuser/.python-venv
        state: directory
        recurse: yes
        owner: mdxuser
        group: mdxuser
    
    - name: daemonize jupyterlab through systemd
      template:
        src: templates/jupyterlab.service.j2
        dest: /etc/systemd/system/jupyterlab.service
      vars:
        jupyterlab_user: mdxuser
        jupyterlab_group: mdxuser
        jupyterlab_directory: /home/mdxuser
    
    - name: make sure enable and run jupyterlab daemon
      systemd:
        name: jupyterlab
        state: started
        enabled: yes
        daemon_reload: yes


################################
# Configure Reverse Proxy
#
- name: Configure nginx on vm1 as reverse proxy
  hosts: vm1
  become: yes

  tasks:
    - name: install nginx
      apt:
        name: nginx
        state: present

    - name: configure nginx as a reverse proxy
      template:
        src: templates/nginx.jupyterlab.proxy.j2
        dest: /etc/nginx/conf.d/proxy.conf
      vars:
        jupyter_host_group: default

    - name: restart nginx
      systemd:
        name: nginx
        state: restarted
        enabled: yes



################################
# Configure NFS
#
- name: Configure NFS server at vm1
  hosts: vm1
  become: yes
  vars:
    - nfs_dir: /home/mdxuser/nfs

  tasks:
    - name: install nfs-kernel-server
      apt:
        name: nfs-kernel-server
        state: present

    - name: make sure nfs-server runs
      systemd:
        name: nfs-server
        state: started
        enabled: yes

    - name: make sure nfs dir exists
      file:
        path: "{{ nfs_dir }}"
        state: directory
        mode: "0755"
        owner: mdxuser
        group: mdxuser

    - name: export /home/mdxuser/nfs
      lineinfile:
        path: /etc/exports
        state: present
        regexp: "^{{ nfs_dir }} "
        line: "{{ nfs_dir }} {{ rdmaipv4prefix }}(rw)"

    - name: re-export all directories
      command: exportfs -ra


- name: Mount NFS from VMs except vm1
  hosts: nfsclient
  become: yes
  vars:
    - nfs_dir: /home/mdxuser/nfs
    - nfs_target: vm1-rdma

  tasks:
    - name: make sure nfs dir exists
      file: 
        path: "{{ nfs_dir }}"
        state: directory
        mode: "0755"
        owner: mdxuser
        group: mdxuser

    - name: mount NFS volume on vm1
      mount:
        src: "{{ nfs_target }}:{{ nfs_dir }}"
        path: "{{ nfs_dir }}"
        opts: rw,noatime
        boot: yes
        state: mounted
        fstype: nfs
